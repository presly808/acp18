<persistence
        xmlns="http://java.sun.com/xml/ns/persistence"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/persistence "
        version="2.0">

    <persistence-unit name="spring-h2-unit" transaction-type="RESOURCE_LOCAL">
        <description>Spring H2 tutor DB.</description>
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <class>spring.model.MyUser</class>

        <properties>
            <property name="hibernate.connection.url" value="jdbc:h2:./database/spring"/>
            <property name="hibernate.connection.driver_class" value="org.h2.Driver"/>
            <property name="hibernate.connection.username" value="root"/>
            <property name="hibernate.connection.password" value=""/>

            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.hbm2ddl.auto" value="update"/>
        </properties>
    </persistence-unit>



    <!-- transaction-type="RESOURCE_LOCAL" means that we will rule the transactions be our own -->
    <!-- transaction-type="JTA" means that we will use Java Transaction API (JTA) to rule the transactions -->
    <persistence-unit name="hibernate-mysql-unit" transaction-type="RESOURCE_LOCAL">

        <description>
            Persistence unit for the Hibernate tutorial using MySQL DB.
        </description>

        <provider>
            org.hibernate.jpa.HibernatePersistenceProvider
        </provider>


        <!-- Classes, which will be mapped: -->
        <class>hibernate.model.Base</class>
        <class>hibernate.model.Department</class>
        <class>hibernate.model.City</class>
        <class>hibernate.model.User</class>

        <class>hibernate.model.TestEntity</class>

        <!-- Properties of DB: -->
        <properties>
            <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/Hibernate_tutorial"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="root"/>

            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect"/>
            <property name="hibernate.show_sql" value="true"/>

            <!-- Init DDL operations. Possible variants:
                 - create: create relation model of OOP model,
                 - update: relation model will be updated with OOP model,
                 - create-drop: create relation model of OOP model AND drop it on exit.
            -->
            <property name="hibernate.hbm2ddl.auto" value="update"/>
        </properties>

    </persistence-unit>



    <persistence-unit name="hibernate-h2-unit">

        <description>
            Persistence unit for the Hibernate tutorial using H2 embedded DB.
        </description>

        <provider>
            org.hibernate.jpa.HibernatePersistenceProvider
        </provider>


        <!-- Classes, which will be mapped: -->
        <class>hibernate.model.Base</class>
        <class>hibernate.model.Department</class>
        <class>hibernate.model.City</class>
        <class>hibernate.model.User</class>

        <class>hibernate.model.TestEntity</class>

        <!-- Properties of DB: -->
        <properties>
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="hibernate.connection.url" value="jdbc:h2:./VolodymyrPeretiatko/src/main/resources/hibernate" />
            <!--<property name="javax.persistence.jdbc.url" value="jdbc:h2:./database/hibernate"/>-->
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value=""/>

            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <property name="hibernate.show_sql" value="true"/>

            <!-- Init DDL operations. Possible variants:
                 - create: create relation model of OOP model,
                 - update: relation model will be updated with OOP model,
                 - create-drop: create relation model of OOP model AND drop it on exit.
            -->
            <property name="hibernate.hbm2ddl.auto" value="update"/>
        </properties>
    </persistence-unit>




    <!-- In one persistence.xml could be set A LOT OF different persistence-units ! -->

</persistence>